{
  "hash": "6e72cc92d151868b5a72283ba1820cc4",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"06 - Anota√ß√£o de c√©lulas II\"\nformat:\n  html:\n    toc: true\n    toc-depth: 3\nexecute:\n  cache: false\njupyter: python3\n---\n\n\n\n\n## Motiva√ß√£o\n\nA anota√ß√£o de c√©lulas √© uma etapa cr√≠tica na an√°lise de dados de transcript√¥mica de c√©lula √∫nica (scRNA-seq). Ela permite transformar clusters n√£o rotulados em informa√ß√µes biol√≥gicas significativas, descrevendo tipos celulares e seus estados funcionais. A anota√ß√£o adequada √© essencial para interpreta√ß√µes corretas e para garantir reprodutibilidade e comparabilidade entre estudos.\n\n## Contextualiza√ß√£o\n\nO Celltypist √© uma ferramenta de aprendizado de m√°quina para anota√ß√£o autom√°tica de c√©lulas em dados de transcript√¥mica de c√©lula √∫nica. Ela possui modelos pr√©-treinados para uma variedade de tecidos e tipos celulares e √© especialmente √∫til para acelerar e padronizar a anota√ß√£o em estudos grandes ou integrados.\n\n-   [Website](https://www.celltypist.org) \n-   [Documenta√ß√£o](https://celltypist.readthedocs.io) \n\n## Convertendo para AnnData\n\n**O c√≥digo abaixo deve ser executado no R. Note que, ao longo deste tutorial, transitaremos entre linguagens de programa√ß√£o.**\n\n::: {#6fac368f .cell execution_count=1}\n``` {.python .cell-code}\n# Carregar pacotes\nlibrary(Seurat)\nlibrary(sceasy)\n\n# Definindo diretorio padrao\nknitr::opts_knit$set(\n  root.dir = \"/home/oandrefonseca/Disciplinas/PPGBM0117.2025.1\",\n  verbose = FALSE\n)\n\n# Aumentar o limite de uso de memoria\noptions(future.globals.maxSize = 5 * 1024^3) # 5 GB, por exemplo\n```\n:::\n\n\n::: {#662ca1c0 .cell execution_count=2}\n``` {.python .cell-code}\n# Carregue seu objeto Seurat\nseurat_object <- readRDS(file = here::here(\"data/seurat_clustered.RDS\"))\nseurat_object@assays$RNA5 <- seurat_object@assays$RNA\n\nseurat_object[[\"RNA\"]] <- as(\n  object = seurat_object[[\"RNA5\"]], Class = \"Assay\")\n\n# Converta para AnnData\nsceasy::convertFormat(\n  seurat_object, \n  from = \"seurat\", \n  to = \"anndata\",\n  outFile = here::here(\"data/seurat_clustered.h5ad\")\n  )\n```\n:::\n\n\n::: {.callout-note collapse=\"false\"}\nNeste bloco, o objeto Seurat √© carregado e preparado para convers√£o. A fun√ß√£o sceasy::convertFormat transforma o objeto em formato AnnData (.h5ad), compat√≠vel com an√°lises em Python.\n:::\n\n## Preparando ambiente Python\n\nAntes de iniciarmos a anota√ß√£o autom√°tica com o Celltypist, √© necess√°rio preparar o ambiente Python com os pacotes apropriados para an√°lise de dados de c√©lula √∫nica. Nesta etapa, carregaremos:\n\n-   **scanpy**: biblioteca central para manipula√ß√£o de dados no formato AnnData e realiza√ß√£o de an√°lises comuns em scRNA-seq.\n-   **celltypist**: ferramenta especializada para anota√ß√£o autom√°tica de c√©lulas baseada em modelos pr√©-treinados.\n-   **celltypist.models**: subm√≥dulo utilizado para carregar modelos espec√≠ficos para diferentes tipos celulares.\n\nEsses pacotes garantir√£o que tenhamos todas as funcionalidades necess√°rias para ler o arquivo `.h5ad`, realizar a anota√ß√£o e explorar os resultados.\n\n::: {#c428291f .cell execution_count=3}\n``` {.python .cell-code}\n# A partir desse ponto o Quarto ira migrar para o kernel do Python\nimport scanpy as sc\nimport celltypist\nfrom celltypist import models\n```\n:::\n\n\n## Carregando objeto rec√©m-convertido\n\n::: {#d26f8f52 .cell execution_count=4}\n``` {.python .cell-code}\nadata = sc.read_h5ad(\"/home/oandrefonseca/Disciplinas/PPGBM0117.2025.1/data/seurat_clustered.h5ad\")\n```\n:::\n\n\n## Baixando modelos\n\n::: {#f931be6c .cell execution_count=5}\n``` {.python .cell-code}\n# Instala os modelos disponiveis pelo Celltypist\nmodels.download_models(force_update = True)\n```\n:::\n\n\n::: {.callout-note collapse=\"false\"}\nA fun√ß√£o `models.download_models` permite baixar modelos pr√©-treinados diretamente do reposit√≥rio oficial do Celltypist. Estes modelos cont√™m informa√ß√µes sobre assinaturas de express√£o g√™nica associadas a diferentes tipos celulares. √â importante escolher o modelo apropriado para o seu tecido ou organismo de interesse, pois isso impactar√° a precis√£o da anota√ß√£o.\n:::\n\nA seguir vamos utilizar a fun√ß√£o `models.models_description`, a qual lista todos os modelos dispon√≠veis no Celltypist, permitindo ao usu√°rio explorar e selecionar o mais adequado para o seu estudo.\n\n::: {#93fa635d .cell execution_count=6}\n``` {.python .cell-code}\nmodels.models_description()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nüëâ Detailed model information can be found at `https://www.celltypist.org/models`\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=71}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>model</th>\n      <th>description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Immune_All_Low.pkl</td>\n      <td>immune sub-populations combined from 20 tissue...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Immune_All_High.pkl</td>\n      <td>immune populations combined from 20 tissues of...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Adult_COVID19_PBMC.pkl</td>\n      <td>peripheral blood mononuclear cell types from C...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Adult_CynomolgusMacaque_Hippocampus.pkl</td>\n      <td>cell types from the hippocampus of adult cynom...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Adult_Human_MTG.pkl</td>\n      <td>cell types and subtypes (10x-based) from the a...</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Adult_Human_PancreaticIslet.pkl</td>\n      <td>cell types from pancreatic islets of healthy a...</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Adult_Human_PrefrontalCortex.pkl</td>\n      <td>cell types and subtypes from the adult human d...</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Adult_Human_Skin.pkl</td>\n      <td>cell types from human healthy adult skin</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Adult_Human_Vascular.pkl</td>\n      <td>vascular populations combined from multiple ad...</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Adult_Mouse_Gut.pkl</td>\n      <td>cell types in the adult mouse gut combined fro...</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Adult_Mouse_OlfactoryBulb.pkl</td>\n      <td>cell types from the olfactory bulb of adult mice</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Adult_Pig_Hippocampus.pkl</td>\n      <td>cell types from the adult pig hippocampus</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Adult_RhesusMacaque_Hippocampus.pkl</td>\n      <td>cell types from the hippocampus of adult rhesu...</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Autopsy_COVID19_Lung.pkl</td>\n      <td>cell types from the lungs of 16 SARS-CoV-2 inf...</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>COVID19_HumanChallenge_Blood.pkl</td>\n      <td>detailed blood cell states from 16 individuals...</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>COVID19_Immune_Landscape.pkl</td>\n      <td>immune subtypes from lung and blood of COVID-1...</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Cells_Adult_Breast.pkl</td>\n      <td>cell types from the adult human breast</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Cells_Fetal_Lung.pkl</td>\n      <td>cell types from human embryonic and fetal lungs</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Cells_Human_Tonsil.pkl</td>\n      <td>tonsillar cell types from humans (3-65 years)</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Cells_Intestinal_Tract.pkl</td>\n      <td>intestinal cells from fetal, pediatric (health...</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Cells_Lung_Airway.pkl</td>\n      <td>cell populations from scRNA-seq of five locati...</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Developing_Human_Brain.pkl</td>\n      <td>cell types from the first-trimester developing...</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Developing_Human_Gonads.pkl</td>\n      <td>cell types of human gonadal and adjacent extra...</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Developing_Human_Hippocampus.pkl</td>\n      <td>cell types from the developing human hippocampus</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Developing_Human_Organs.pkl</td>\n      <td>cell types of five endoderm-derived organs in ...</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Developing_Human_Thymus.pkl</td>\n      <td>cell populations in embryonic, fetal, pediatri...</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Developing_Mouse_Brain.pkl</td>\n      <td>cell types from the embryonic mouse brain betw...</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Developing_Mouse_Hippocampus.pkl</td>\n      <td>cell types from the mouse hippocampus at postn...</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Fetal_Human_AdrenalGlands.pkl</td>\n      <td>cell types of human fetal adrenal glands from ...</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Fetal_Human_Pancreas.pkl</td>\n      <td>pancreatic cell types from human embryos at 9-...</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>Fetal_Human_Pituitary.pkl</td>\n      <td>cell types of human fetal pituitaries from 7 t...</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>Fetal_Human_Retina.pkl</td>\n      <td>cell types from human fetal neural retina and ...</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>Fetal_Human_Skin.pkl</td>\n      <td>cell types from developing human fetal skin</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>Healthy_Adult_Heart.pkl</td>\n      <td>cell types from eight anatomical regions of th...</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>Healthy_COVID19_PBMC.pkl</td>\n      <td>peripheral blood mononuclear cell types from h...</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>Healthy_Human_Liver.pkl</td>\n      <td>cell types from scRNA-seq and snRNA-seq of the...</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>Healthy_Mouse_Liver.pkl</td>\n      <td>cell types from scRNA-seq and snRNA-seq of the...</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>Human_AdultAged_Hippocampus.pkl</td>\n      <td>cell types from the hippocampus of adult and a...</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>Human_Colorectal_Cancer.pkl</td>\n      <td>cell types of colon tissues from patients with...</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>Human_Developmental_Retina.pkl</td>\n      <td>cell types from human fetal retina</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>Human_Embryonic_YolkSac.pkl</td>\n      <td>cell types of the human yolk sac from 4-8 post...</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>Human_Endometrium_Atlas.pkl</td>\n      <td>endometrial cell types integrated from seven d...</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>Human_IPF_Lung.pkl</td>\n      <td>cell types from idiopathic pulmonary fibrosis,...</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Human_Longitudinal_Hippocampus.pkl</td>\n      <td>cell types from the adult human anterior and p...</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>Human_Lung_Atlas.pkl</td>\n      <td>integrated Human Lung Cell Atlas (HLCA) combin...</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>Human_PF_Lung.pkl</td>\n      <td>cell types from different forms of pulmonary f...</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>Human_Placenta_Decidua.pkl</td>\n      <td>cell types from first-trimester human placenta...</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>Lethal_COVID19_Lung.pkl</td>\n      <td>cell types from the lungs of individuals who d...</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>Mouse_Dentate_Gyrus.pkl</td>\n      <td>cell types from the dentate gyrus in perinatal...</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>Mouse_Isocortex_Hippocampus.pkl</td>\n      <td>cell types from the adult mouse isocortex (neo...</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>Mouse_Postnatal_DentateGyrus.pkl</td>\n      <td>cell types from the mouse dentate gyrus in pos...</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>Mouse_Whole_Brain.pkl</td>\n      <td>cell types from the whole adult mouse brain</td>\n    </tr>\n    <tr>\n      <th>52</th>\n      <td>Nuclei_Lung_Airway.pkl</td>\n      <td>cell populations from snRNA-seq of five locati...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>Pan_Fetal_Human.pkl</td>\n      <td>stromal and immune populations from the human ...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#5dd7694c .cell execution_count=7}\n``` {.python .cell-code}\nmodel = models.Model.load(model = 'Immune_All_High.pkl')\n```\n:::\n\n\n::: {.callout-note collapse=\"false\"}\nA fun√ß√£o `models.Model.load` carrega o modelo pr√©-treinado escolhido (neste caso, \"Immune_All_High.pkl\") para ser utilizado na anota√ß√£o. Este modelo cont√©m as assinaturas de express√£o g√™nica necess√°rias para classificar as c√©lulas em tipos celulares espec√≠ficos com base no seu perfil de express√£o. O modelo **Immune_All_High** foi treinado com dados de popula√ß√µes imunes combinadas de **20 tecidos de 18 estudos distintos**, o que o torna adequado para anota√ß√µes em datasets diversos relacionados ao sistema imune.\n\nMais informa√ß√µes sobre os modelos dispon√≠veis podem ser encontradas em [Celltypist Models](https://www.celltypist.org/models).\n:::\n\n::: {#f02ab982 .cell execution_count=8}\n``` {.python .cell-code}\nmodel.cell_types\n```\n\n::: {.cell-output .cell-output-display execution_count=73}\n```\narray(['B cells', 'B-cell lineage', 'Cycling cells', 'DC', 'DC precursor',\n       'Double-negative thymocytes', 'Double-positive thymocytes', 'ETP',\n       'Early MK', 'Endothelial cells', 'Epithelial cells',\n       'Erythrocytes', 'Erythroid', 'Fibroblasts', 'Granulocytes',\n       'HSC/MPP', 'ILC', 'ILC precursor', 'MNP', 'Macrophages',\n       'Mast cells', 'Megakaryocyte precursor',\n       'Megakaryocytes/platelets', 'Mono-mac', 'Monocyte precursor',\n       'Monocytes', 'Myelocytes', 'Plasma cells', 'Promyelocytes',\n       'T cells', 'pDC', 'pDC precursor'], dtype=object)\n```\n:::\n:::\n\n\n## Executando predi√ß√£o\n\n::: {#6ba850dc .cell execution_count=9}\n``` {.python .cell-code}\npredictions = celltypist.annotate(adata, model = 'Immune_All_High.pkl', majority_voting = True)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nüî¨ Input data has 67633 cells and 38606 genes\nüîó Matching reference genes in the model\nüß¨ 5824 features used for prediction\n‚öñÔ∏è Scaling input data\nüñãÔ∏è Predicting labels\n‚úÖ Prediction done!\nüëÄ Can not detect a neighborhood graph, will construct one before the over-clustering\n‚õìÔ∏è Over-clustering input data with resolution set to 20\nüó≥Ô∏è Majority voting the predictions\n‚úÖ Majority voting done!\n```\n:::\n:::\n\n\n::: {.callout-note collapse=\"false\"}\nA fun√ß√£o `celltypist.annotate` executa a predi√ß√£o autom√°tica dos tipos celulares com base no modelo carregado. Neste caso, o modelo `\"Immune_All_High.pkl\"` ser√° utilizado para classificar as c√©lulas do objeto `adata`.\\\nO argumento `majority_voting=True` assegura que as previs√µes sejam refinadas por meio de um m√©todo de vota√ß√£o majorit√°ria, tornando a anota√ß√£o por c√©lula mais robusta e reduzindo poss√≠veis classifica√ß√µes amb√≠guas.\n\nAp√≥s a anota√ß√£o, o resultado √© armazenado no objeto `predictions`. Para facilitar a manipula√ß√£o e integra√ß√£o com outras an√°lises, a fun√ß√£o `to_adata()` √© utilizada para converter essas predi√ß√µes em um objeto `AnnData`, armazenado na vari√°vel `predictions_data`.\n:::\n\n::: {#adc365f8 .cell execution_count=10}\n``` {.python .cell-code}\npredictions_data = predictions.to_adata()\n```\n:::\n\n\n## Adicionando dados ao objeto original\n\n::: {#c6b2a51c .cell execution_count=11}\n``` {.python .cell-code}\nadata.obs[\"celltypist_cell_label\"] = predictions_data.obs.loc[adata.obs.index, \"majority_voting\"]\nadata.obs[\"celltypist_conf_score\"] = predictions_data.obs.loc[adata.obs.index, \"conf_score\"]\n```\n:::\n\n\n## Visualizando UMAP\n\n::: {#fig-umap-high .cell .fig-cap-location-top execution_count=12}\n``` {.python .cell-code}\nsc.pl.umap(\n    adata,\n    color = [\"celltypist_cell_label\"],\n    frameon = False,\n    sort_order = False,\n    wspace = 1\n)\n\nsc.pl.umap(\n    adata,\n    color = [\"celltypist_conf_score\"],\n    frameon = False,\n    sort_order = False,\n    wspace = 1\n)\n```\n\n::: {.cell-output .cell-output-display}\n![Low granularity](06_cell_annotation_files/figure-html/fig-umap-high-output-1.png){#fig-umap-high-1 width=703 height=409}\n:::\n\n::: {.cell-output .cell-output-display}\n![Prediction score](06_cell_annotation_files/figure-html/fig-umap-high-output-2.png){#fig-umap-high-2 width=541 height=409}\n:::\n\nCelltypist High annotation\n:::\n\n\n## Similaridade entre popula√ß√µes\n\n::: {#cell-fig-dendrogram .cell execution_count=13}\n``` {.python .cell-code}\nsc.pl.dendrogram(adata, groupby = \"celltypist_cell_label\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWARNING: dendrogram data not found (using key=dendrogram_celltypist_cell_label). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![Dendrogram](06_cell_annotation_files/figure-html/fig-dendrogram-output-2.png){#fig-dendrogram width=540 height=489}\n:::\n:::\n\n\n::: {.callout-note collapse=\"false\"}\nA fun√ß√£o `sc.pl.dendrogram` √© utilizada para visualizar a rela√ß√£o hier√°rquica entre os grupos de c√©lulas anotados. No exemplo acima, o argumento `groupby = \"celltypist_cell_label\"` especifica que as c√©lulas ser√£o agrupadas com base nas anota√ß√µes feitas pelo Celltypist.Este gr√°fico permite observar como os diferentes tipos celulares anotados se relacionam entre si com base no perfil de express√£o g√™nica global. C√©lulas com assinaturas semelhantes tendem a se agrupar mais pr√≥ximas no dendrograma, enquanto c√©lulas com perfis distintos aparecem mais afastadas.\n\nEsta abordagem √© √∫til para verificar se as anota√ß√µes refletem a biologia esperada, identificando poss√≠veis classifica√ß√µes inconsistentes ou agrupamentos inesperados entre os tipos celulares.\n:::\n\n## Express√£o das assinaturas g√™nicas\n\n::: {#dc5ce651 .cell execution_count=14}\n``` {.python .cell-code}\ntop_genes = dict()\n\nfor cell_type in adata.obs[\"celltypist_cell_label\"].unique():\n    markers = list(model.extract_top_markers(cell_type, 3))\n    for gene in markers:\n        if gene in list(adata.var_names):\n            top_genes.setdefault(cell_type, []).append(gene)\n```\n:::\n\n\n::: {#94582646 .cell execution_count=15}\n``` {.python .cell-code}\nall_markers = [item for sublist in top_genes.values() for item in sublist]\n```\n:::\n\n\n::: {#a8f4fb87 .cell execution_count=16}\n``` {.python .cell-code code-fold=\"true\"}\nfor cell, genes in top_genes.items():\n    sc.tl.score_genes(adata, gene_list=genes, score_name=cell)\n```\n:::\n\n\n::: {.callout-note collapse=\"false\"}\nA fun√ß√£o `sc.tl.score_genes` calcula um escore que resume a express√£o de uma assinatura g√™nica espec√≠fica em cada c√©lula. Biologicamente, isso √© importante para avaliar se os marcadores coletivamente delimitam a identidade das c√©lulas e/ou seus estados funcionais. Dessa forma, o escore facilita a visualiza√ß√£o e interpreta√ß√£o, pois atribui um valor cont√≠nuo √∫nico que reflete a express√£o da assinatura em cada c√©lula.\n:::\n\n::: {#fig-violin-module .cell fig-show='hold' execution_count=17}\n``` {.python .cell-code}\n# Plot each gene score in a subplot\nfor cell, genes in top_genes.items():\n    if cell in adata.obs.columns:\n        sc.pl.violin(adata, keys=cell, groupby=\"RNA_snn_res.0.25\", rotation=90)\n```\n\n::: {.cell-output .cell-output-display}\n![Celltypist Gene Signature](06_cell_annotation_files/figure-html/fig-violin-module-output-1.png){#fig-violin-module-1 width=663 height=396}\n:::\n\n::: {.cell-output .cell-output-display}\n![](06_cell_annotation_files/figure-html/fig-violin-module-output-2.png){#fig-violin-module-2 width=663 height=396}\n:::\n\n::: {.cell-output .cell-output-display}\n![](06_cell_annotation_files/figure-html/fig-violin-module-output-3.png){#fig-violin-module-3 width=663 height=396}\n:::\n\n::: {.cell-output .cell-output-display}\n![](06_cell_annotation_files/figure-html/fig-violin-module-output-4.png){#fig-violin-module-4 width=650 height=397}\n:::\n\n::: {.cell-output .cell-output-display}\n![](06_cell_annotation_files/figure-html/fig-violin-module-output-5.png){#fig-violin-module-5 width=650 height=396}\n:::\n\n::: {.cell-output .cell-output-display}\n![](06_cell_annotation_files/figure-html/fig-violin-module-output-6.png){#fig-violin-module-6 width=652 height=396}\n:::\n\n::: {.cell-output .cell-output-display}\n![](06_cell_annotation_files/figure-html/fig-violin-module-output-7.png){#fig-violin-module-7 width=652 height=396}\n:::\n\n::: {.cell-output .cell-output-display}\n![](06_cell_annotation_files/figure-html/fig-violin-module-output-8.png){#fig-violin-module-8 width=639 height=396}\n:::\n\n::: {.cell-output .cell-output-display}\n![](06_cell_annotation_files/figure-html/fig-violin-module-output-9.png){#fig-violin-module-9 width=652 height=396}\n:::\n\n::: {.cell-output .cell-output-display}\n![](06_cell_annotation_files/figure-html/fig-violin-module-output-10.png){#fig-violin-module-10 width=652 height=396}\n:::\n\n::: {.cell-output .cell-output-display}\n![](06_cell_annotation_files/figure-html/fig-violin-module-output-11.png){#fig-violin-module-11 width=652 height=396}\n:::\n\n::: {.cell-output .cell-output-display}\n![](06_cell_annotation_files/figure-html/fig-violin-module-output-12.png){#fig-violin-module-12 width=639 height=396}\n:::\n:::\n\n\n## Express√£o diferencial\n\n::: {#e8593493 .cell execution_count=18}\n``` {.python .cell-code}\nsc.tl.rank_genes_groups(\n    adata,\n    groupby = \"celltypist_cell_label\",\n    method = \"wilcoxon\",\n    key_added = \"dea_cell_label\"\n    )\n```\n:::\n\n\n::: {#cell-fig-dotplot .cell .column-screen-inset-shaded execution_count=19}\n``` {.python .cell-code}\nsc.pl.rank_genes_groups_dotplot(\n    adata,\n    groupby = \"celltypist_cell_label\",\n    standard_scale = \"var\",\n    n_genes = 5,\n    key = \"dea_cell_label\"\n    )\n```\n\n::: {.cell-output .cell-output-display}\n![DotPlot](06_cell_annotation_files/figure-html/fig-dotplot-output-1.png){#fig-dotplot width=1951 height=520}\n:::\n:::\n\n\n::: {.callout-note collapse=\"false\"}\nO comando `sc.pl.rank_genes_groups_dotplot` gera um gr√°fico do tipo dotplot que visualiza os genes diferencialmente expressos entre os grupos definidos pela anota√ß√£o do Celltypist (`groupby = \"celltypist_cell_label\"`). No eixo y do gr√°fico s√£o mostrados os grupos celulares anotados e no eixo x os genes diferencialmente expressos. Para cada grupo, s√£o exibidos at√© **5 genes** mais representativos (`n_genes = 5`), definidos pela an√°lise armazenada na chave `\"dea_cell_label\"` do objeto AnnData. O argumento `standard_scale = \"var\"` padroniza os valores de express√£o dos genes, garantindo que eles sejam compar√°veis entre si. Isso √© √∫til para destacar padr√µes relativos de express√£o, independentemente das diferen√ßas absolutas de abund√¢ncia.\n\nNo dotplot, cada ponto indica:\n\n-   **O tamanho**: a fra√ß√£o de c√©lulas do grupo que expressa o gene.\n\n-   **A cor**: o n√≠vel m√©dio de express√£o do gene naquele grupo.\n\nEste tipo de visualiza√ß√£o √© essencial para validar se as anota√ß√µes dos tipos celulares fazem sentido com base nos genes marcadores expressos e para identificar assinaturas g√™nicas caracter√≠sticas ou √∫nicas de cada popula√ß√£o celular.\n:::\n\n## Salvando anota√ß√£o\n\n::: {#7db035a5 .cell execution_count=20}\n``` {.python .cell-code}\n# Selecionar colunas de anota√ß√£o que ser√£o salvas\nannotations = adata.obs[[\"celltypist_cell_label\", \"celltypist_conf_score\"]]\n\n# Salvar como CSV\nannotations.to_csv(\"/home/oandrefonseca/Disciplinas/PPGBM0117.2025.1/data/celltypist_annotations.csv\")\n```\n:::\n\n\n",
    "supporting": [
      "06_cell_annotation_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}